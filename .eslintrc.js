module.exports = {
  'root': true,
  'env': {
    'amd': true,
    'browser': true,
    'es6': true,
    'node': true,
    'es2024': true,
    'jest': true,
  },
  extends: [
    'plugin:@typescript-eslint/recommended',
  ],
  'parser': '@typescript-eslint/parser',
  'parserOptions': {
    'ecmaVersion': 2025,
    'sourceType': 'module',
  },
  'plugins': [
    'import',
    'unused-imports',
    '@typescript-eslint',
  ],
  'rules': {
    'no-undef': 0,
    'indent': ['error', 2,],
    'import/newline-after-import': ['error', { 'count': 1, }, ],
    'import/no-duplicates': 1,
    'object-curly-spacing': ['error', 'always', ],
    'quotes': [1, 'single', { 'allowTemplateLiterals': true, }, ],
    'semi': [1, 'always', ],
    'comma-spacing': [2, { 'before': false, 'after': true, }, ],
    'space-infix-ops': ['error', { 'int32Hint': false, }, ],
    'comma-dangle': [
      'error',
      {
        'arrays': 'always',
        'objects': 'always',
        'imports': 'always',
        'exports': 'always',
        'functions': 'never',
      },
    ],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: ['const', 'let', 'var', 'if', ], next: '*', },
      { blankLine: 'any', prev: ['const', 'let', 'var', ], next: ['const', 'let', 'var', ], },
    ],
    'no-multi-spaces': ['error', ],
    'no-multiple-empty-lines': ['error', { 'max': 1, 'maxEOF': 0, }, ],
    'lines-between-class-members': ['error', 'always', ],
    'linebreak-style': ['error', 'windows', ],
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    'unused-imports/no-unused-imports': 'error',
    'unused-imports/no-unused-vars': [
      'warn',
      { 'vars': 'all', 'varsIgnorePattern': '^_', 'args': 'none', },
    ],
    '@typescript-eslint/naming-convention': [
      'error',
      {
        'selector': 'interface',
        'format': ['PascalCase', ],
        'custom': {
          'regex': '^I[A-Z]',
          'match': true,
        },
      },
    ],
    'key-spacing': ['error', { 'afterColon': true, }, ],
    '@typescript-eslint/no-explicit-any': 'off',
    'prefer-const': 'off',
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/no-empty-object-type': ['error', { allowInterfaces: 'with-single-extends', },],
  },
};
